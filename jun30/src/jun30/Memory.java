package jun30;
/*
 * 
 * 중요 : 호출스텍은 예외처리할 때 필요하다.

메소드 영역
   클래스 데이터
   프로그램 실행 중 어떤 클래스가 사용되면 JVM은 해당 클래스 파일을
   읽어서 이곳에 저장하며 동시에 클래스 변수도 이곳에 저장
   = Class 정보, 전역변수 정보, Static 변수 정보가 저장되는 공간
   = 상수
   모든 스레드에서 정보가 공유
   
   
 * 호출스택(stack)
 * 		지역변수, 메소드의 매개변수와 같이 잠시 사용되고 
 * 		필요가 없어지는 데이터가 저장되는 공간
 * 		메소드작업에 필요한 메모리 공간을 제공합니다ㅣ.
 * 		메모리에서 메소드가 작업을 수행하는 동안
 * 		지역변수와 연산의 중간 결과값이 저장되는 공간입니다.
 * 		메소드가 작업을 마치면 항당되었던 메모리 공간은 반환 -> 비워짐
 * 		나머지는  ? 모두 대기중입니다.
 * 		언제나 호출 스텍의 제일 상위에 있는 메소드가 작업중(실행중)입니다.
 * 		=last in first out, 나중에 들어온 데이터가 먼저 나간다.
 * 		스레드마다 하나씩 존재한다.
 * 
 * 
 * 힙영역 (heap)
 * 		인스턴스가 이곳에 생성 됩니다.
 * 		new 연산자로 생성된 객체, Array 와 같은 
 * 		동적으로 생성된 데이터가 저장되는 공간
 * 		heap 에 저장된 데이터는
 * 		garbage collector 가 처리하지 않는한 소멸되지 않는다.
 * 		reference type 의 데이터가 저장되는 공간
 *
 * 리턴 타입이 있는 메소드는 종료되기 직전에 결과값을 반호나합니다.
 * 누구에게? 자신을 호출한 메소드에게 반환합니다.
 * 스텍메모리 참조 = 하위 메소드에게 주고 소멸됩니다. 
 * 
 * 
 * 
 */
public class Memory {

}
